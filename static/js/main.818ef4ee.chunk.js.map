{"version":3,"sources":["components/CardStarships.js","components/StarshipList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","registerServiceWorker.js","index.js"],"names":["CardStarships","_ref","name","model","manufacturer","cost_in_credits","length","crew","consumables","hyperdrive_rating","starship_class","react_default","a","createElement","className","StarshipList","starships","map","_ref2","components_CardStarships","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","height","children","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSearchChange","event","setState","target","value","state","_this2","Promise","all","asyncToGenerator","regenerator_default","mark","_callee","url","response","moreStarships","combinedArrayOfStarships","sortedArrayOfStarships","wrap","_context","prev","next","fetch","sent","json","push","results","flat","sort","b","localeCompare","stop","_x","apply","arguments","catch","error","console","log","_this$state","filteredStarships","filter","starship","toLowerCase","includes","components_SearchBox","components_Scroll","components_StarshipList","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","src_containers_App","document","getElementById","URL","process","origin","addEventListener","concat","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.818ef4ee.chunk.js","sourcesContent":["import React from 'react';\n\n\nconst CardStarships = ({ name, model, manufacturer, cost_in_credits, length, crew, consumables, hyperdrive_rating, starship_class }) => {\n\treturn (\n\t\t<div className=\"tc bg-black dib br3 pa3 ma2 grow bw2 shadow-5\">\n\t\t\t<h2>{name}</h2>\n            <p><strong>Model:</strong> {model}</p>\n            <p><strong>Manufacturer:</strong> {manufacturer}</p>\n            <p><strong>Cost_in_credits:</strong> {cost_in_credits}</p>\n            <p><strong>Length:</strong> {length}</p>\n            <p><strong>Crew:</strong> {crew}</p>\n            <p><strong>Consumables:</strong> {consumables}</p>\n            <p><strong>Hyperdrive_rating:</strong> {hyperdrive_rating}</p> \n            <p><strong>Starship_class:</strong> {starship_class}</p>\n\t\t</div>\n\t);\n};\n\nexport default CardStarships;","import React from 'react';\nimport CardStarships from './CardStarships';\n\nconst StarshipList = ({ starships }) => {\n    return (\n        <div>\n            {starships.map(({ name, model, manufacturer, cost_in_credits, length, crew, consumables, hyperdrive_rating, starship_class }) => \n                <CardStarships key={name} name ={name} model = {model}\n                manufacturer ={manufacturer} cost_in_credits ={cost_in_credits} length ={length}\n                crew = {crew} consumables ={consumables} hyperdrive_rating = {hyperdrive_rating} starship_class = {starship_class} />)}\n        </div>\n    );\n}\n\nexport default StarshipList; ","import React from 'react';\n\nconst SearchBox = ({ searchfield, searchChange }) => {\n  return (\n    <div className='pa2'>\n      <input\n        className='pa3 ba b--green bg-lightest-blue'\n        type='search'\n        placeholder='search starships...'\n        onChange={searchChange}\n      />\n    </div>\n  );\n}\n\nexport default SearchBox;\n\n// import React from 'react';\n\n// const SearchBox = ({ searchChange }) => {\n// \treturn (\n// \t\t<div className='pa2'>\n// \t\t\t<input\n// \t\t\t\tclassName='pa3 ba b--yellow bg-black yellow'\n// \t\t\t\ttype='search'\n// \t\t\t\tplaceholder='Search...'\n// \t\t\t\tonChange={searchChange}\n// \t\t\t/>\n// \t\t</div>\n// \t);\n// }\n\n// export default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n  return (\n    <div style={{ overflow: 'scroll', height: '800px'}}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Scroll;","import React, { Component } from 'react';\nimport StarshipList from '../components/StarshipList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport './App.css';\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\tstarships: [],\n\t\t\tsearchfield: ''\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tconst urls = [\n\t\t\t'https://swapi.co/api/starships/',\n\t\t\t'https://swapi.co/api/starships/?page=2', \n\t\t\t'https://swapi.co/api/starships/?page=3',\n\t\t\t'https://swapi.co/api/starships/?page=4'\n\t\t]\n\t\t\t\t\n\t\tPromise.all(urls.map(async url => {\n\t\t\tconst response = await fetch(url);\n\t\t\tconst moreStarships = await response.json();\n\t\t\tvar combinedArrayOfStarships = this.state.starships;\n\t\t\tcombinedArrayOfStarships.push(moreStarships.results);\n\t\t\t\n\t\t\tvar sortedArrayOfStarships = combinedArrayOfStarships\n\t\t\t\t.flat()\n\t\t\t\t.sort((a, b) => a.name.localeCompare(b.name));\n\t\t\t\n\t\t\tthis.setState({starships: sortedArrayOfStarships})\n\t\t}))\n\t\t.catch(error => \n\t\t\tconsole.log('Error during fetching of starships:', error)\n\t\t);\n\t}\n\tonSearchChange = (event) => {\n\t\tthis.setState({ searchfield: event.target.value })\n\t}\n\n\trender() {\n\t\tconst { starships, searchfield } = this.state; console.log(starships)\n\t\tconst filteredStarships = starships.filter(starship => starship.name.toLowerCase().includes(searchfield.toLowerCase()));\n\t\t\t\n\t\t\treturn !starships.length ?\n\t\t\t\t<h1 className='tc f-subheadline'>Loading ...</h1> :\n\t\t\t\t(\n\t\t\t\t\t<div className='tc'>\n\t\t\t\t\t\t<h1 className='f-subheadline'>Star Wars</h1>\n\t\t\t\t\t\t<h2 className='f1'>Starships</h2>\t\n\t\t\t\t\t\t<SearchBox searchChange={this.onSearchChange}/><br/>\n\t\t\t\t\t\t<Scroll>\n\t\t\t\t\t\t\t<br/><StarshipList starships={filteredStarships}/>\n\t\t\t\t\t\t</Scroll>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t}\n\t}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport registerServiceWorker from './registerServiceWorker';\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}